
{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Yet Another Node.js Blogg Application API",
    "description": "Yet Another Node.js Blogg Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": [
    {
      "auth":
    {
    "oauth2" : {
    "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
    "flow": "implicit",
    "scopes":
    {
      "write:pets": "modify pets in your account",
      "read:pets": "read your pets"
    }
  },
  "api_key":{
    "type":"apiKey",
    "name":"api_key",
    "in":"header"
  }
  }
}

  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users/add": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a user",
        "description": "Create new user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/addUserWithimage": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a user with image",
        "description": "Create new user with image",
        "consumes":[
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nom",
            "in": "formData",
            "description": "Nom",
            "type": "string"
          },
          {
            "name": "prenom",
            "in": "formData",
            "description": "Prenom",
            "type": "string"
          },
          {
            "name": "username",
            "in": "formData",
            "description": "Username",
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "Email",
            "type": "string"
          },
          {
            "name": "address",
            "in": "formData",
            "description": "Address",
            "type": "string"
          },
          {
            "name": "tel",
            "in": "formData",
            "description": "Tel",
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Password",
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "Image to upload",
            "required": false,
            "type": "array",
            "items":{
              "name":"image",
              "type":"file",
              "in":"formData",
              "required":"true"
            }
          }
        ],
      
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/getAll": {
        "get": {
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "x-access-token",
              "in": "header",
              "required": true,
              "type": "string"
            } 
          ],
          "summary": "Get all users in system",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
          }
        }
      },
    "/users/getUserById/{userId}": {
      "parameters": [
        {
           "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
        }, 
      
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/deleteUserById/{userId}": {
      "parameters": [
        {
          "name": "x-access-token",
           "in": "header",
           "required": true,
           "type": "string"
       }, 
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }}
    },    
      "/users/put/{userId}": {
      "put": {
        "summary": "Update user with give ID",
        "tags": [
          "Users"
        ],
        "parameters": [
         
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of user that we want to find",
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
      
    },
    "/users/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Login to the system",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "The user that we want to login",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
         
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username/password"
       
          }
        }
      }
    },
    "/users/logOut": {
      "post": {
        "tags": [
          "logout"
        ],
        "consumes":[
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Logs out current logged in user session",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "refreshToken",
            "in": "formData",
            "required": true,
            "description": "User that we want to logout",
            "type":"string"
          }
          
        ],
        "responses": {
          "500": {
            "description": "Successfully logged out"
          },
          "400": {
            "description": "Failed to logout"
       
          }
        }
      }
    },
    "/users/token": {
      "post": {
        "tags": [
          "Token"
        ],
       
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          }
        ],
        "summary": "Logs out current logged in user session",
     
        "responses": {
          "default": {
            "description": "Successfully refreshed"
          },
          "401": {
            "description": "Failed to refresh Token"
       
          }
        }
      }
    }

  },
  "definitions": {
    "User": {
      "required": [
        "password",
        "tel",
        "email",
        "username",
        "prenom",
        "nom"
       
      ],
      "properties": {
        "nom": {
          "type": "string"
        },
        "prenom": {
          "type": "string"
        },
        "username": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
            "type": "string",
            "uniqueItems": true
          },
        "tel": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
        "password": {
            "type": "string"
          }
      
      }
    },
    "Token": {
    
      "properties": {
        "_id": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    }
  }
}